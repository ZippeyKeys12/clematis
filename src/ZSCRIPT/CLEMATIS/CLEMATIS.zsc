class Clematis abstract{
    bool Logging;

    int StartTime;

    Name CurrTestSuite;

    Array<Cl_Result> Results;

    static
    Clematis Create(Class<Clematis> Type)
    {return Clematis(new(Type)).Init();}

    /* How to run
     * Runs test upon creation by default
     * With that setup one has 3 options
     *
     * 1. Console Command
     *     netevent test:ClematisExample
     * 2. EventHandler call
     *     EventHandler.SendNetworkEvent('test:ClematisExample');
     * 3. Factory method
     *     Clematis.Create('ClematisExample');
     *
     * Otherwise one can instatiate the test and call run on it
     *     Clematis TestSuite=Clematis.Create('ClematisExample');
     *     TestSuite.Run();
     */

    virtual
    Clematis Init(){
        Run();
        return self;
    }

    virtual
    void Run()
    {TestSuites();}

    virtual
    void Reset(){
        StartTime=MSTime();
        Results.Clear();
    }

    virtual
    void TestSuites(){
        /* Example
         * Describe('Testing Player Stats');
         *     It('MaxHealth', MaxHealth<100, LOG_Warning);
         *     It('Math', 1+1==2, LOG_Fatal);
         * EndDescribe();
         */
    }

    void Describe(Name TestSuiteName){
        Log(LOG_Info, "START SUITE: "..TestSuiteName);
        CurrTestSuite=TestSuiteName;
        Reset();
    }

    void EndDescribe(){
        uint Failures=0
           , Successes=0;
        for(int i=0; i<Results.Size(); i++){
            Cl_Result Curr=Results[i];
            String Info="", Suff;
            if(Curr.Success){
                Info="\cd";
                Suff="Successful";
                Curr.Severity=LOG_Info;
                Successes++;
            }else{
                Suff="Failure";
                Failures++;
            }
            Log(Curr.Severity, Info.."Task "..Curr.Name..": "..Suff);
        }
        Log(LOG_Info, "END SUITE: "..CurrTestSuite.." - Took ~"..MSTime()-StartTime.." ms".."\n"
                    ..Failures+Successes.." Tests Run, "..Successes.." Tests Succeeded, "..Failures.." Test Failed".."\n");
    }

    void It(Name TestCaseName, bool Condition, Cl_ELogSeverity Severity)
    {Results.Push(Cl_Result.Create(TestCaseName, Condition, Severity));}

    /////////////
    // Logging //
    /////////////

    void Log(Cl_ELogSeverity Severity, String LogText, bool Verbose=false){
        if(!Verbose || Logging)
            Cl_Debug.Log(GetClassName(), LogText, Severity);
    }
}